{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Filip\\\\Desktop\\\\react-site\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Filip\\\\Desktop\\\\react-site\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Filip\\\\Desktop\\\\react-site\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Filip\\\\Desktop\\\\react-site\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Filip\\\\Desktop\\\\react-site\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Filip\\\\Desktop\\\\react-site\\\\my-app\\\\src\\\\components\\\\AccordionCustom.js\";\nimport React from 'react';\n\nvar AccordionCustom =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AccordionCustom, _React$Component);\n\n  function AccordionCustom(props) {\n    var _this;\n\n    _classCallCheck(this, AccordionCustom);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AccordionCustom).call(this, props));\n\n    _this.toggle = function () {\n      if (!_this.state.isOpen) {\n        _this.setState({\n          isOpen: true,\n          accordionStatus: \"accordion-open\"\n        });\n      } else {\n        _this.setState({\n          isOpen: false,\n          accordionStatus: \"accordion-close\"\n        });\n      }\n    };\n\n    _this.createAccordionContent = function () {\n      var description = _this.props.description;\n      var accordionContent = [];\n      Object.keys(description).forEach(function (key) {\n        if (description[key].link === \"\") {\n          React.createElement(\"p\", {\n            className: \"p-custom\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, description[key].name);\n        } else {\n          React.createElement(\"a\", {\n            className: \"anchors-custom\",\n            href: description[key].link,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, description[key].name);\n        }\n\n        accordionContent.push(React.createElement(\"div\", {\n          className: _this.state.isOpen ? 'accordion-open' : 'accordion-close',\n          ref: _this.accordion,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"anchors-custom\",\n          href: description[key].link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, description[key].name)));\n      });\n      return accordionContent;\n    };\n\n    _this.state = {\n      isOpen: false,\n      accordionStatus: \"accordion-close\"\n    };\n    _this.accordion = React.createRef();\n    return _this;\n  }\n\n  _createClass(AccordionCustom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        isOpen: false,\n        accordionStatus: \"accordion-close\"\n      });\n    } //for toggling the accordion\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"post-head\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.title, React.createElement(\"i\", {\n        className: \"fas fa-caret-down padding-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), this.createAccordionContent(), React.createElement(\"div\", {\n        className: this.state.isOpen ? 'div-fill' : 'div-no-fill',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AccordionCustom;\n}(React.Component);\n\nexport default AccordionCustom;","map":{"version":3,"sources":["C:\\Users\\Filip\\Desktop\\react-site\\my-app\\src\\components\\AccordionCustom.js"],"names":["React","AccordionCustom","props","toggle","state","isOpen","setState","accordionStatus","createAccordionContent","description","accordionContent","Object","keys","forEach","key","link","name","push","accordion","createRef","title","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass AccordionCustom extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      accordionStatus: \"accordion-close\"\r\n    }\r\n    this.accordion = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isOpen: false, accordionStatus: \"accordion-close\"})\r\n   }\r\n\r\n  //for toggling the accordion\r\n  toggle = () => {\r\n    if(!this.state.isOpen) {\r\n      this.setState({\r\n        isOpen: true,\r\n        accordionStatus: \"accordion-open\"\r\n      });\r\n\r\n    }\r\n    else {\r\n      this.setState({\r\n        isOpen: false,\r\n        accordionStatus: \"accordion-close\"\r\n      });\r\n    }\r\n  }\r\n\r\n  //populates the accordion using the passed object description\r\n  createAccordionContent = () => {\r\n    let description = this.props.description;\r\n    let accordionContent = [];\r\n    Object.keys(description).forEach(key => {\r\n      if(description[key].link === \"\") {\r\n        <p className=\"p-custom\">\r\n          {description[key].name}\r\n        </p>\r\n      }\r\n      else {\r\n        <a className=\"anchors-custom\" href={description[key].link}>\r\n          {description[key].name}\r\n        </a>\r\n      }\r\n      accordionContent.push(\r\n        <div className={this.state.isOpen ? 'accordion-open' : 'accordion-close'} ref={this.accordion}>\r\n\r\n          <a className=\"anchors-custom\" href={description[key].link}>\r\n            {description[key].name}\r\n          </a>\r\n        </div>\r\n      )\r\n    });\r\n    return accordionContent;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"post\">\r\n        <div>\r\n        <button className=\"post-head\" onClick={this.toggle}>\r\n          {this.props.title}\r\n          <i className=\"fas fa-caret-down padding-left\"></i>\r\n        </button>\r\n            {this.createAccordionContent()}\r\n            <div className={this.state.isOpen ? 'div-fill' : 'div-no-fill'}>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccordionCustom;\r\n"]},"metadata":{},"sourceType":"module"}